<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>用fail2ban屏蔽SSH爆破</title>
    <link href="/2021/fail2ban/"/>
    <url>/2021/fail2ban/</url>
    
    <content type="html"><![CDATA[<h1 id="故事背景"><a href="#故事背景" class="headerlink" title="故事背景"></a>故事背景</h1><p>SSH爆破真是令人厌烦，动不动上万次的密码尝试属实难绷。<br>爆破密集到一定程度甚至有点浪费我宝贵的服务器带宽，并且有点担心我那并不算长的密码被试出来。<br>改端口和禁用密码验证是可行方案，但是会造成一定程度上的不便，本懒狗暂时不考虑。</p><p><img src="/images/SSH.png" width = "80%"  alt="老是有人爆破我SSH" /></p><h1 id="初步尝试"><a href="#初步尝试" class="headerlink" title="初步尝试"></a>初步尝试</h1><p>网上随便搜了搜教程，了解到可以用pam_tally2模块来防爆破。<br>配置好这个模块后才发现，该模块的行为是</p><blockquote><p>限制登录失败时可以锁定用户一段时间，就算密码输入正确也无法登录，等恢复之后才可以再次进入。</p></blockquote><p>也就是说，检测到多次密码失败后会锁定账户，然后我自己也登不上去了，不太符合云服务器的使用场景。</p><h1 id="使用fail2ban"><a href="#使用fail2ban" class="headerlink" title="使用fail2ban"></a>使用fail2ban</h1><p>随后搜到个叫<a href="https://github.com/fail2ban/fail2ban/wiki">fail2ban</a>的包，可以检测到多次密码尝试错误后封禁IP，很贴合需求。<br>我这里用的是CentOS 7.9，其他发行版可能在实际配置上有差异。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><code>yum install fail2ban</code></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>根据文档建议，新建一个配置文件<br><code>vim /etc/fail2ban/jail.local</code></p><p>内容如下：  </p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">[DEFAULT]<br># time <span class="hljs-keyword">is</span> <span class="hljs-keyword">in</span> seconds. <span class="hljs-number">3600</span> = <span class="hljs-number">1</span> hour, <span class="hljs-number">86400</span> = <span class="hljs-number">24</span> hours (<span class="hljs-number">1</span> day)<br>findtime    = <span class="hljs-number">1800</span><br>bantime     = <span class="hljs-number">43200</span><br>maxretry    = <span class="hljs-number">5</span><br>ignoreip    = <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">8</span> <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">8</span> <span class="hljs-number">172.16</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">12</span> <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">16</span><br><br>[sshd]<br>enabled = <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>可以根据需要修改数值。<br>按<code>Esc</code>后<code>：wq</code>保存，懂的都懂。</p><h2 id="应用并开启开机自启动"><a href="#应用并开启开机自启动" class="headerlink" title="应用并开启开机自启动"></a>应用并开启开机自启动</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">systemctl</span> enable fail<span class="hljs-number">2</span>ban<br><span class="hljs-attribute">systemctl</span> restart fail<span class="hljs-number">2</span>ban<br></code></pre></td></tr></table></figure><h2 id="查询阻挡状态"><a href="#查询阻挡状态" class="headerlink" title="查询阻挡状态"></a>查询阻挡状态</h2><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs axapta">fail2ban-<span class="hljs-keyword">client</span> status<br>fail2ban-<span class="hljs-keyword">client</span> status sshd<br></code></pre></td></tr></table></figure><p><img src="/images/fail2ban_status.png" width = "80%"  alt="查看状态" /></p><h1 id="说点废话"><a href="#说点废话" class="headerlink" title="说点废话"></a>说点废话</h1><p>部署这个之后，用<code>lastb</code>查到的登陆失败日志大幅减少，再也不怕SSH爆破了。<br>看到有的文章中改了很多配置项，有点麻烦，实测只要配置<code>jail.local</code>中几行就能够正常工作了，</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a href="https://www.jianshu.com/p/ba0f77a83a63">Centos7.4安装放暴力破解工具fail2ban</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用Syncthing进行单向备份</title>
    <link href="/2021/Syncthing/"/>
    <url>/2021/Syncthing/</url>
    
    <content type="html"><![CDATA[<h1 id="使用Syncthing将移动设备的文件单向备份到PC"><a href="#使用Syncthing将移动设备的文件单向备份到PC" class="headerlink" title="使用Syncthing将移动设备的文件单向备份到PC"></a>使用Syncthing将移动设备的文件单向备份到PC</h1><h2 id="故事背景及废话"><a href="#故事背景及废话" class="headerlink" title="故事背景及废话"></a>故事背景及废话</h2><p>&emsp;&emsp;<a href="#%E5%9B%BE%E7%A9%B7%E5%8C%95%E8%A7%81">跳过废话</a>  </p><p>&emsp;&emsp;最近，我这台才使用了半年的手机的存储空间已经仅剩41.5GB/256.0GB了。与此同时，云服务空间仅剩6.6GB/64.0GB。</p><p>&emsp;&emsp;我深知我手机里那庞大的空间占用是我完全懒得清理造成的，只要我哪天迫不得已去对冗余数据进行一次激情地清理就能解决。但是云服务空间的耗尽让我有点头疼。</p><p><img src="/images/CloudSpace.png"  width = 30% alt="云存储空间"></p><p>明明没拍啥照片就快把云存储占满了，这可不太对劲啊。没办法，现在面前只有两个选择：</p><ol><li>加钱升级套餐</li><li>删文件</li></ol><p>加钱是不可能加钱的！于是决定删掉一些占用过大的文件。</p><p>&emsp;&emsp;经过一番分析，发现有些谜之视频占用了不少空间。这些视频大多数是我瞎拍的或者二手交易中寄快递拆快递时用于保存证据的录像，没啥用但也不是很舍得删。又但是，云存储寸土寸金，还是别用来存这玩意儿了。</p><p><img src="/images/某知名导演.jpg" width=30% alt="某知名导演微博"></p><p>某日，机缘巧合下观某知名导演微博，受到启发，遂尝试整了这玩意儿。</p><h2 id="图穷匕见"><a href="#图穷匕见" class="headerlink" title="图穷匕见"></a>图穷匕见</h2><p>好，现在总结一下需求：</p><ol><li>将手机上的媒体单向备份到PC。</li><li>将手机上的视频文件删除时，PC端的视频文件不能受到影响。</li></ol><p>话不多说，开始配置！</p><h3 id="安装Syncthing"><a href="#安装Syncthing" class="headerlink" title="安装Syncthing"></a>安装Syncthing</h3><p>Syncthing是一款开源软件，适配了多个平台的客户端。<br>官网：<a href="https://syncthing.net/">https://syncthing.net/</a><br>项目地址：<a href="https://github.com/syncthing/syncthing">https://github.com/syncthing/syncthing</a></p><p>基本的安装及配置可以参考<a href="https://www.appinn.com/syncthing/">《Syncthing – 数据同步新选择，手把手教你做自己的网盘》</a></p><h3 id="建立连接"><a href="#建立连接" class="headerlink" title="建立连接"></a>建立连接</h3><p>在WindowsPC和Android手机上都安装好Syncthing后，扫码即可互相建立连接。<br>之后，添加需要同步的目录，并勾选上接受文件的设备。  </p><p><img src="/images/Android端配置.jpg"  width = 35% alt="手机端目录配置"></p><p>因为我<strong>不希望电脑端的文件变化影响手机端的文件</strong>，于是我将手机端设为了<strong>仅发送</strong>。</p><p><img src="/images/PC端设置.png"  width = 80% alt="PC端设置"></p><p>并且将PC端设置成了<strong>仅接收</strong>。</p><h3 id="安全删除手机上的文件"><a href="#安全删除手机上的文件" class="headerlink" title="安全删除手机上的文件"></a>安全删除手机上的文件</h3><p>按以上操作配置好之后，我们已经实现了手机端文件向PC的单向传输。但此时需要注意，若是<strong>手机上的文件被删除，PC上的文件也会同步被删除</strong>。<br>出于我为手机腾空间的需求，需要避免这种问题的发生。</p><h4 id="启用文件版本控制"><a href="#启用文件版本控制" class="headerlink" title="启用文件版本控制"></a>启用文件版本控制</h4><p>这是Syncthing的界面上摆在明显位置的功能。启用之后，在手机上的文件被删除时，PC端上的文件会被移入特别的垃圾箱。</p><p><img src="/images/版本控制.png"  width = 90% alt="使用版本控制"></p><h4 id="启用Ignore-Delete"><a href="#启用Ignore-Delete" class="headerlink" title="启用Ignore Delete"></a>启用Ignore Delete</h4><p>文件版本控制虽然能够让你的文件不被删除，但是还是太不优雅。越想越不对劲，Syncthing这看起来牛逼哄哄的软件咋可能没这功能呢？<br>经过我一番搜索，得知还有一些功能藏在高级设置里。</p><p>打开设置页右上角的操作-高级-文件夹，选择你需要配置的文件夹，找到<strong>Ignore Delete</strong>选项，将其勾选并保存。</p><p><img src="/images/Ignore Delete.png"  width = 90% alt="启用Ignore Delete"></p><p>官方对这个选项的解释：<a href="https://docs.syncthing.net/advanced/folder-ignoredelete.html#ignoredelete">IgnoreDelete</a></p><p>这样，在手机上删除文件时，就能保留PC上的文件了。</p><p>需要注意的是，这个选项只是忽略了删除命令，当文件被覆盖时，可能会引起旧文件的丢失。所以建议与版本控制一同使用，以防万一。</p><h2 id="再废话几句"><a href="#再废话几句" class="headerlink" title="再废话几句"></a>再废话几句</h2><p>数据无价，请谨慎操作。<br>配置完才搜到的这个文章，写得不错，要是能早点看到就不用自己摸索了：<br><a href="https://jaycechant.info/2016/backup-tips-about-syncthing/">用 Syncthing 备份的技巧</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>LG G8 的 MIUI12 性能修复</title>
    <link href="/2020/dex2oat-fix/"/>
    <url>/2020/dex2oat-fix/</url>
    
    <content type="html"><![CDATA[<h1 id="对-LG-G8-的-MIUI12-中的重大性能问题进行简易修复"><a href="#对-LG-G8-的-MIUI12-中的重大性能问题进行简易修复" class="headerlink" title="对 LG G8 的 MIUI12 中的重大性能问题进行简易修复"></a>对 LG G8 的 MIUI12 中的重大性能问题进行简易修复</h1><h2 id="废话"><a href="#废话" class="headerlink" title="废话"></a>废话</h2><p>细心的观众朋友们可能已经发现了，</p><p>LG G8 的 MIUI12 存在比较奇怪的性能问题。</p><p>主要体现在应用启动很慢，RAM 消耗大，12G RAM 也不够用，但是应用安装速度极快。</p><p>经过我多日研究，发现了问题所在：</p><p>该 MIUI12 ROM 包的 dex2oat 功能未能正常工作，安装应用时 dex2oat 过程报错并且被跳过。</p><p><a href="https://source.android.google.cn/devices/tech/dalvik#AOT_compilation">dex2oat</a> 的作用：</p><blockquote><p>Android Runtime (ART) 引入了预先编译机制，可提高应用的性能。<br>ART 使用设备自带的 dex2oat 工具来编译应用。</p></blockquote><p>向开发者反馈没有得到有效结果，所以我研究了一下发现了解决方案。</p><p>一般魔改 ROM 需要进行 deodex 操作避免冲突，但这个 MIUI12 ROM 并没有做。</p><p>真麻烦，还得自己动手。</p><h2 id="教程开始"><a href="#教程开始" class="headerlink" title="教程开始"></a>教程开始</h2><p>可以选择手动修改或者安装Magisk模块</p><h3 id="手动修改"><a href="#手动修改" class="headerlink" title="手动修改"></a>手动修改</h3><p>使用文件管理器，</p><p>进入/system/framework，</p><p>删除 arm, arm64, oat 三个文件夹，</p><p>并删除所有.vdex 格式的文件，</p><p>重启。</p> <!-- ![DeleteThese](/images/DeleteThese.jpg?57) --><p><img src="/images/DeleteThese.jpg" width = "40%" alt="DeleteThese"  /></p><!-- ![DeleteTheseToo](/images/DeleteTheseToo.jpg?) --><p><img src="/images/DeleteTheseToo.jpg" width = "40%"  alt="DeleteTheseToo" /></p><p><em>需要删除的文件示例</em></p><h3 id="使用-Magisk-模块"><a href="#使用-Magisk-模块" class="headerlink" title="使用 Magisk 模块"></a>使用 Magisk 模块</h3><p><a href="https://www.lanzoux.com/iRO36gkg0pc">下载地址</a></p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p><strong>重启时需要大约 10 分钟进行开机优化</strong></p><p><strong>不保证该操作绝对安全可靠，使用以上方案即视为同意承担可能出现的不良后果</strong></p><p><strong>请在掌握救砖方法且备份好重要数据后进行操作</strong></p><p><strong>仅修复LG G8的MIUI12的迷惑问题，对其他功能正常的ROM有负面影响，切勿乱用</strong></p><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p><img src="/images/RAM_Usage_compare.jpg"></p><p>应用启动速度快了不少呢！</p><p>骁龙855用起来又像是骁龙855了呢！</p><p>敏感肌也能用哦！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>本站成功建立啦</title>
    <link href="/2020/what-happened/"/>
    <url>/2020/what-happened/</url>
    
    <content type="html"><![CDATA[<h1 id="关于本站的建立"><a href="#关于本站的建立" class="headerlink" title="关于本站的建立"></a>关于本站的建立</h1><p>  &emsp;&emsp;zhouym建了个博客是怎么回事呢？zhouym相信大家都不熟悉，但是zhouym建了个博客是怎么回事呢，下面就让小编带大家一起了解吧。</p><p>  &emsp;&emsp;zhouym建了个博客，其实就是zhouym闲得慌，所以用Hexo在Github Pages建了个站，大家可能会很惊讶zhouym怎么会建了个博客呢？但事实就是这样，zhouym也感到非常惊讶。</p><p>  &emsp;&emsp;这就是关于zhouym建了个博客的事情了，大家有什么想法呢，欢迎在评论区告诉zhouym一起讨论哦！噢，评论系统还没建好，那没事了。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
